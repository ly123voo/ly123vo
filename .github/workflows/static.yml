<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>POST和GET请求页面</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            text-align: center;
            padding: 20px;
        }
        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: auto;
        }
        input, textarea, button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        button {
            background-color: #28a745;
            color: #fff;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }
        .history {
            margin-top: 20px;
            text-align: left;
        }
        .history-item {
            background-color: #e9ecef;
            margin: 10px 0;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }
        .history-item pre {
            display: none;
            margin: 0;
            padding: 10px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>POST和GET请求页面</h1>
        <div class="form-group">
            <input type="text" id="interval" placeholder="循环间隔时间（毫秒）">
            <input type="text" id="authorization" placeholder="Authorization令牌">
            <input type="number" id="sessionId" placeholder="LootActivitySessionID">
            <input type="number" id="prizeId" placeholder="LootActivitySessionPrizeID">
            <button onclick="startRequests()">开始请求</button>
        </div>
        <div id="response" style="margin-top: 20px;"></div>
        <div class="history" id="history"></div>
    </div>

    <script>
        async function sendPostRequest(post_url, headers, data) {
            try {
                const response = await fetch(post_url, {
                    method: 'POST',
                    headers: headers,
                    body: JSON.stringify(data),
                    timeout: 10000
                });
                if (response.ok) {
                    const text = await response.text();
                    const match = text.match(/CachePrefix([^\s]{51})/);
                    if (match) {
                        return match[1];
                    } else {
                        console.log("未找到匹配的字符串");
                        return null;
                    }
                } else {
                    console.log("POST请求失败，状态码:", response.status);
                    return null;
                }
            } catch (error) {
                console.log("请求错误:", error);
                return null;
            }
        }

        async function sendGetRequest(get_url, headers, params) {
            try {
                const url = new URL(get_url);
                url.search = new URLSearchParams(params).toString();
                const response = await fetch(url, {
                    method: 'GET',
                    headers: headers,
                    timeout: 10000
                });
                if (response.ok) {
                    return await response.text();
                } else {
                    console.log("GET请求失败，状态码:", response.status);
                    return null;
                }
            } catch (error) {
                console.log("请求错误:", error);
                return null;
            }
        }

        function startRequests() {
            const interval = parseInt(document.getElementById('interval').value);
            const authorization = document.getElementById('authorization').value;
            const sessionId = parseInt(document.getElementById('sessionId').value);
            const prizeId = parseInt(document.getElementById('prizeId').value);

            const post_url = "https://gateway.allxf.top/lootactivityapi/OpenService/v1/Activity/QueueReceiveLootActivity";
            const post_headers = {
                "Host": "gateway.allxf.top",
                "Authorization": authorization,
                "Content-Type": "application/json;charset=UTF-8",
                "Referer": "https://m.allxf.top/"
            };
            const post_data = {
                "LootActivitySessionID": sessionId,
                "LootActivitySessionPrizeID": prizeId,
                "BeaconVerifyParam": []
            };

            const get_url = "https://gateway.allxf.top/lootactivityapi/OpenService/v1/Activity/GetQueueReceiveLootActivityResult";
            const get_headers = {
                "Host": "gateway.allxf.top",
                "Authorization": authorization,
                "Content-Type": "application/json;charset=UTF-8",
                "Accept": "application/json, text/plain, */*"
            };

            setInterval(async () => {
                const extracted_string = await sendPostRequest(post_url, post_headers, post_data);
                if (extracted_string) {
                    const params = { "QueueReceiveKey": `LootActivity:QueueReceive:CachePrefix${extracted_string}` };
                    const get_response = await sendGetRequest(get_url, get_headers, params);
                    if (get_response) {
                        document.getElementById('response').innerHTML = `<pre>${get_response}</pre>`;
                        addToHistory(get_response);
                    }
                }
            }, interval);
        }

        function addToHistory(response) {
            const history = document.getElementById('history');
            const item = document.createElement('div');
            item.className = 'history-item';
            item.innerHTML = `请求时间: ${new Date().toLocaleString()}<pre>${response}</pre>`;
            item.onclick = () => {
                const pre = item.querySelector('pre');
                pre.style.display = pre.style.display === 'none' ? 'block' : 'none';
            };
            history.appendChild(item);
        }
    </script>
</body>
</html>
